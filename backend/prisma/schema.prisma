generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid()
  name       String   @db.VarChar(100)
  identifier String   @unique @db.VarChar(12)
  email      String   @unique @db.VarChar(60)
  password   String   @db.VarChar(200)
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  leads      Lead[]
  tokens     Token[]

  @@map("users")
}

model Token {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid()
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now()) @updatedAt
  access_token String
  is_revoked   Boolean  @default(false)
  user         User     @relation(fields: [user_id], references: [id])
  user_id      String   @db.Uuid()
  type         String   @default("login")

  @@map("tokens")
}

model Lead {
  id             String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid()
  name           String      @db.VarChar(100)
  phone          String      @db.VarChar(20)
  email          String      @db.VarChar(60)
  created_at     DateTime    @default(now())
  updated_at     DateTime    @default(now()) @updatedAt
  User           User?       @relation(fields: [user_id], references: [id])
  user_id        String?     @db.Uuid()
  leads_status   LeadStatus? @relation(fields: [lead_status_id], references: [id])
  lead_status_id String?     @db.Uuid()
}

model LeadStatus {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid()
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  Lead       Lead[]
}
